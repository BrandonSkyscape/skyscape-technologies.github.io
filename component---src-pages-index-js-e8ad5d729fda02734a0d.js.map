{"version":3,"sources":["webpack:///./src/components/body-image.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header-image.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["BodyImage","react_default","a","createElement","gatsby_browser_entry","query","render","data","gatsby_image_default","fluid","bodyImage","childImageSharp","_4018043482","IndexPage","layout","seo","title","keywords","style","display","flexDirection","boxSizing","flexGrow","width","maxWidth","alignItems","justifyContent","iconContext","Provider","value","color","size","href","className","rel","target","fa","body_image","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf","HeaderImage","headerImage","_283181898","Header","siteTitle","background","marginBottom","margin","padding","dist","flexWrap","pr","header_image","to","textDecoration","float","Layout","Fragment","minHeight","header","backgroundColor","_755544856","node"],"mappings":"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","file":"component---src-pages-index-js-e8ad5d729fda02734a0d.js","sourcesContent":["import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst BodyImage = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        bodyImage: file(relativePath: { eq: \"skyscape_bcg_drops_inverted.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 1701) {\n              ...GatsbyImageSharpFluid_noBase64\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.bodyImage.childImageSharp.fluid} />}\n  />\n)\nexport default BodyImage\n","import React from \"react\"\nimport { IconContext } from \"react-icons\";\nimport { FaTwitter, FaLinkedin } from 'react-icons/fa';\n\nimport Layout from \"../components/layout\"\nimport BodyImage from \"../components/body-image\"\nimport SEO from \"../components/seo\"\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" keywords={[`artificial intelligence`, `machine learning`, `real estate`, `proptech`, `property`, `analytics`, `rooftop`, `roof`, `marketplace`, `geospatial`, `smart city`, `urban planning`, `airspace`, `computer vision`, `deep learning`, `uav`, `infrastructure`, `platform`]} />\n    <div\n      style={{\n        display: `flex`,\n        flexDirection: `column`,\n        boxSizing: `border-box`,\n        flexGrow: 1,\n        width: `100%`,\n        maxWidth: `1548px`,\n      }}\n    >\n      <div\n        style={{\n          display: `flex`,\n          flexDirection: `column`,\n          alignItems: `center`,\n          justifyContent: `center`,\n          flexGrow: 1,\n        }}\n      >\n        <h1>We're upgrading. Find out more</h1>\n        <IconContext.Provider value={{ color: \"white\", size: `3em` }}>\n          <a href=\"https://twitter.com/skyscapetech\" className=\"btn-cta-orange\" rel=\"noopener noreferrer\" target=\"_blank\">\n            <FaTwitter />\n          </a>\n          <a href=\"https://www.linkedin.com/company/skyscape-technologies/\" className=\"btn-cta-green\" rel=\"noopener noreferrer\" target=\"_blank\">\n            <FaLinkedin />\n          </a>\n        </IconContext.Provider>\n      </div>\n      <div\n        style={{\n          maxWidth: `1548px`,\n        }}\n      >\n        <BodyImage />\n      </div>\n    </div>\n  </Layout>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst HeaderImage = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        headerImage: file(relativePath: { eq: \"Skyscape_dark_long.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 1701) {\n              ...GatsbyImageSharpFluid_noBase64\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.headerImage.childImageSharp.fluid} />}\n  />\n)\nexport default HeaderImage\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport { Flex, Box } from \"rebass\"\n\nimport HeaderImage from \"./header-image\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `#424958`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <Flex\n        alignItems='center'\n        flexWrap='wrap'\n      >\n        <Box\n          width={[1, 1/2, 1/4, 1/4]}\n          pr={4}\n        >\n          <HeaderImage />\n        </Box>\n        <Box\n          width={[1, 1/2, 3/4, 3/4]}\n        >\n          <h2 style={{ margin: 0 }}>\n            <Link\n              to=\"/\"\n              style={{\n                color: `white`,\n                textDecoration: `none`,\n                float: `right`,\n              }}\n            >\n              {siteTitle}\n            </Link>\n          </h2>\n        </Box>\n      </Flex>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <div\n          style={{\n            minHeight: `100vh`,\n            display: `flex`,\n            flexGrow: 1,\n          }}\n        >\n          <div\n            style={{\n              display: `flex`,\n              flexDirection: `column`,\n              flexGrow: 1,\n            }}\n          >\n              <Header siteTitle={data.site.siteMetadata.title} />\n              <main\n                style={{\n                  display: `flex`,\n                  flexDirection: `column`,\n                  flexGrow: 1,\n                  alignItems: `center`,\n                }}\n              >\n                {children}\n              </main>\n              <footer\n                className=\"bottom\"\n                style={{\n                  backgroundColor: `#021729`,\n                  color: `white`,\n                }}\n              >\n                <ul>\n                  <li>SKYSCAPE TECHNOLOGIES LTD, Sutton Yard, 4th Floor, 65 Goswell Road, London, EC1V 7EN, E: HELLO@SKYSCAPE.GLOBAL</li>\n                  <li>© 2019 Skyscape Technologies LTD. Registered Company Number 10835962.</li>\n                </ul>\n              </footer>\n          </div>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}